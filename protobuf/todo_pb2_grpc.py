# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protobuf import todo_pb2 as protobuf_dot_todo__pb2


class TodoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTodos = channel.unary_unary(
                '/todo_service.TodoService/GetTodos',
                request_serializer=protobuf_dot_todo__pb2.TodoCreator.SerializeToString,
                response_deserializer=protobuf_dot_todo__pb2.TodosList.FromString,
                )
        self.CreateTodo = channel.unary_unary(
                '/todo_service.TodoService/CreateTodo',
                request_serializer=protobuf_dot_todo__pb2.NewTodo.SerializeToString,
                response_deserializer=protobuf_dot_todo__pb2.Todo.FromString,
                )
        self.GetTodo = channel.unary_unary(
                '/todo_service.TodoService/GetTodo',
                request_serializer=protobuf_dot_todo__pb2.TodoIdentifier.SerializeToString,
                response_deserializer=protobuf_dot_todo__pb2.Todo.FromString,
                )
        self.EditTodo = channel.unary_unary(
                '/todo_service.TodoService/EditTodo',
                request_serializer=protobuf_dot_todo__pb2.Todo.SerializeToString,
                response_deserializer=protobuf_dot_todo__pb2.Todo.FromString,
                )
        self.DeleteTodo = channel.unary_unary(
                '/todo_service.TodoService/DeleteTodo',
                request_serializer=protobuf_dot_todo__pb2.TodoIdentifier.SerializeToString,
                response_deserializer=protobuf_dot_todo__pb2.SuccessResponse.FromString,
                )


class TodoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTodos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTodo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTodo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditTodo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTodo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TodoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTodos': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTodos,
                    request_deserializer=protobuf_dot_todo__pb2.TodoCreator.FromString,
                    response_serializer=protobuf_dot_todo__pb2.TodosList.SerializeToString,
            ),
            'CreateTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTodo,
                    request_deserializer=protobuf_dot_todo__pb2.NewTodo.FromString,
                    response_serializer=protobuf_dot_todo__pb2.Todo.SerializeToString,
            ),
            'GetTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTodo,
                    request_deserializer=protobuf_dot_todo__pb2.TodoIdentifier.FromString,
                    response_serializer=protobuf_dot_todo__pb2.Todo.SerializeToString,
            ),
            'EditTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.EditTodo,
                    request_deserializer=protobuf_dot_todo__pb2.Todo.FromString,
                    response_serializer=protobuf_dot_todo__pb2.Todo.SerializeToString,
            ),
            'DeleteTodo': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTodo,
                    request_deserializer=protobuf_dot_todo__pb2.TodoIdentifier.FromString,
                    response_serializer=protobuf_dot_todo__pb2.SuccessResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'todo_service.TodoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TodoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTodos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/todo_service.TodoService/GetTodos',
            protobuf_dot_todo__pb2.TodoCreator.SerializeToString,
            protobuf_dot_todo__pb2.TodosList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTodo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/todo_service.TodoService/CreateTodo',
            protobuf_dot_todo__pb2.NewTodo.SerializeToString,
            protobuf_dot_todo__pb2.Todo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTodo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/todo_service.TodoService/GetTodo',
            protobuf_dot_todo__pb2.TodoIdentifier.SerializeToString,
            protobuf_dot_todo__pb2.Todo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditTodo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/todo_service.TodoService/EditTodo',
            protobuf_dot_todo__pb2.Todo.SerializeToString,
            protobuf_dot_todo__pb2.Todo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTodo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/todo_service.TodoService/DeleteTodo',
            protobuf_dot_todo__pb2.TodoIdentifier.SerializeToString,
            protobuf_dot_todo__pb2.SuccessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
